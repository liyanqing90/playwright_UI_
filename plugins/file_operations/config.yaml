# 文件操作插件配置
name: "file_operations"
version: "1.0.0"
description: "文件和目录操作插件，提供完整的文件系统操作功能"
author: "Playwright UI Team"

# 插件设置
plugin:
  enabled: true
  encoding: "utf-8"  # 默认文件编码
  backup_enabled: true  # 是否启用自动备份
  max_file_size: 104857600  # 最大文件大小限制 (100MB)
  auto_detect_encoding: true  # 自动检测文件编码
  create_dirs: true  # 自动创建目录
  
# 支持的文件格式
formats:
  text:
    extensions: [".txt", ".log", ".md", ".rst", ".ini", ".cfg"]
    default_encoding: "utf-8"
  json:
    extensions: [".json"]
    indent: 2
    ensure_ascii: false
  yaml:
    extensions: [".yaml", ".yml"]
    default_flow_style: false
    allow_unicode: true
  csv:
    extensions: [".csv"]
    delimiter: ","
    quotechar: '"'
    encoding: "utf-8"
  xml:
    extensions: [".xml"]
    encoding: "utf-8"
  binary:
    extensions: [".bin", ".dat", ".exe", ".dll"]

# 备份设置
backup:
  enabled: true
  directory: "backups"  # 备份目录
  timestamp_format: "%Y%m%d_%H%M%S"  # 时间戳格式
  max_backups: 10  # 最大备份数量
  auto_cleanup: true  # 自动清理旧备份
  
# 压缩设置
compression:
  default_format: "zip"  # 默认压缩格式
  compression_level: 6  # 压缩级别 (0-9)
  supported_formats:
    - "zip"
    - "tar"
    - "gztar"
    - "bztar"
    - "xztar"

# 搜索设置
search:
  default_pattern: "*"  # 默认搜索模式
  recursive: true  # 递归搜索
  include_hidden: false  # 包含隐藏文件
  case_sensitive: false  # 大小写敏感
  max_results: 1000  # 最大搜索结果数
  content_search_encoding: "utf-8"  # 内容搜索编码

# 安全设置
security:
  allowed_paths:  # 允许操作的路径
    - "./data"
    - "./temp"
    - "./uploads"
    - "./downloads"
  forbidden_paths:  # 禁止操作的路径
    - "/etc"
    - "/sys"
    - "/proc"
    - "C:\\Windows\\System32"
  allowed_extensions:  # 允许的文件扩展名
    - ".txt"
    - ".json"
    - ".yaml"
    - ".yml"
    - ".csv"
    - ".xml"
    - ".log"
    - ".md"
  forbidden_extensions:  # 禁止的文件扩展名
    - ".exe"
    - ".bat"
    - ".cmd"
    - ".ps1"
    - ".sh"

# 性能设置
performance:
  chunk_size: 8192  # 文件读写块大小
  max_concurrent_operations: 5  # 最大并发操作数
  timeout: 30  # 操作超时时间（秒）
  memory_limit: 536870912  # 内存限制 (512MB)

# 命令映射
commands:
  READ_FILE:
    aliases: ["read_file", "load_file", "读取文件"]
    description: "读取文件内容"
    parameters:
      file_path: "文件路径"
      encoding: "文件编码（可选，默认utf-8）"
      format: "文件格式（text/json/yaml/csv/binary）"
      variable_name: "存储变量名（可选）"
      scope: "变量作用域（可选，默认global）"
      
  WRITE_FILE:
    aliases: ["write_file", "save_file", "写入文件"]
    description: "写入文件内容"
    parameters:
      file_path: "文件路径"
      content: "文件内容"
      encoding: "文件编码（可选，默认utf-8）"
      format: "文件格式（text/json/yaml/csv/binary）"
      mode: "写入模式（w覆盖/a追加，默认w）"
      create_dirs: "是否创建目录（可选，默认true）"
      backup: "是否备份（可选，默认true）"
      
  DELETE_FILE:
    aliases: ["delete_file", "remove_file", "删除文件"]
    description: "删除文件或目录"
    parameters:
      file_path: "文件路径"
      backup: "是否备份（可选，默认true）"
      force: "强制删除（可选，默认false）"
      
  COPY_FILE:
    aliases: ["copy_file", "复制文件"]
    description: "复制文件或目录"
    parameters:
      source_path: "源文件路径"
      dest_path: "目标文件路径"
      overwrite: "是否覆盖（可选，默认false）"
      preserve_metadata: "保留元数据（可选，默认true）"
      
  MOVE_FILE:
    aliases: ["move_file", "rename_file", "移动文件"]
    description: "移动或重命名文件"
    parameters:
      source_path: "源文件路径"
      dest_path: "目标文件路径"
      overwrite: "是否覆盖（可选，默认false）"
      
  CREATE_DIRECTORY:
    aliases: ["create_dir", "mkdir", "创建目录"]
    description: "创建目录"
    parameters:
      dir_path: "目录路径"
      parents: "创建父目录（可选，默认true）"
      exist_ok: "目录存在时不报错（可选，默认true）"
      
  LIST_DIRECTORY:
    aliases: ["list_dir", "ls", "列出目录"]
    description: "列出目录内容"
    parameters:
      dir_path: "目录路径"
      pattern: "文件模式（可选，默认*）"
      recursive: "递归列出（可选，默认false）"
      include_hidden: "包含隐藏文件（可选，默认false）"
      variable_name: "存储变量名（可选）"
      
  FILE_EXISTS:
    aliases: ["file_exists", "exists", "文件存在"]
    description: "检查文件是否存在"
    parameters:
      file_path: "文件路径"
      variable_name: "存储变量名（可选）"
      
  GET_FILE_INFO:
    aliases: ["file_info", "stat", "文件信息"]
    description: "获取文件信息"
    parameters:
      file_path: "文件路径"
      variable_name: "存储变量名（可选）"
      
  BACKUP_FILE:
    aliases: ["backup_file", "备份文件"]
    description: "备份文件"
    parameters:
      file_path: "文件路径"
      backup_dir: "备份目录（可选）"
      variable_name: "存储备份路径变量名（可选）"
      
  RESTORE_FILE:
    aliases: ["restore_file", "恢复文件"]
    description: "恢复文件"
    parameters:
      backup_path: "备份文件路径"
      original_path: "原始文件路径（可选）"
      overwrite: "是否覆盖（可选，默认false）"
      
  COMPRESS_FILE:
    aliases: ["compress", "zip", "压缩文件"]
    description: "压缩文件或目录"
    parameters:
      source_path: "源文件路径"
      archive_path: "压缩文件路径（可选）"
      format: "压缩格式（可选，默认zip）"
      variable_name: "存储压缩文件路径变量名（可选）"
      
  EXTRACT_FILE:
    aliases: ["extract", "unzip", "解压文件"]
    description: "解压文件"
    parameters:
      archive_path: "压缩文件路径"
      extract_path: "解压路径（可选）"
      variable_name: "存储解压路径变量名（可选）"
      
  SEARCH_FILES:
    aliases: ["search", "find", "搜索文件"]
    description: "搜索文件"
    parameters:
      search_path: "搜索路径"
      pattern: "文件名模式（可选，默认*）"
      content_pattern: "内容搜索模式（可选）"
      recursive: "递归搜索（可选，默认true）"
      case_sensitive: "大小写敏感（可选，默认false）"
      variable_name: "存储搜索结果变量名（可选）"
      
  BATCH_OPERATION:
    aliases: ["batch", "批量操作"]
    description: "批量文件操作"
    parameters:
      operations: "操作列表"
      continue_on_error: "出错时继续（可选，默认false）"
      variable_name: "存储结果变量名（可选）"

# 使用示例
examples:
  - name: "读取JSON文件"
    description: "读取JSON配置文件并存储到变量"
    step:
      action: "read_file"
      file_path: "./config/settings.json"
      format: "json"
      variable_name: "config_data"
      
  - name: "写入CSV文件"
    description: "将数据写入CSV文件"
    step:
      action: "write_file"
      file_path: "./data/output.csv"
      content: "${csv_data}"
      format: "csv"
      
  - name: "备份重要文件"
    description: "备份重要配置文件"
    step:
      action: "backup_file"
      file_path: "./config/important.yaml"
      backup_dir: "./backups"
      
  - name: "搜索日志文件"
    description: "搜索包含错误信息的日志文件"
    step:
      action: "search_files"
      search_path: "./logs"
      pattern: "*.log"
      content_pattern: "ERROR|FATAL"
      variable_name: "error_logs"
      
  - name: "批量处理文件"
    description: "批量备份和压缩文件"
    step:
      action: "batch_operation"
      operations:
        - type: "backup"
          params:
            file_path: "./data/file1.txt"
        - type: "compress"
          params:
            source_path: "./data/file1.txt"
            format: "zip"
      continue_on_error: true
      variable_name: "batch_results"

# 依赖项
dependencies:
  required:
    - "pyyaml>=5.4.0"
    - "chardet>=4.0.0"
  optional:
    - "lxml>=4.6.0"  # XML处理增强
    - "openpyxl>=3.0.0"  # Excel文件支持

# 版本兼容性
compatibility:
  python: ">=3.7"
  playwright: ">=1.20.0"

# 许可证
license: "MIT"

# 更新日志
changelog:
  "1.0.0":
    - "初始版本发布"
    - "支持基本文件操作（读取、写入、删除、复制、移动）"
    - "支持目录操作（创建、列出、搜索）"
    - "支持文件备份和恢复"
    - "支持文件压缩和解压"
    - "支持批量操作"
    - "支持多种文件格式（text、json、yaml、csv、binary）"
    - "提供安全限制和性能优化"